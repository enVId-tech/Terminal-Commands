{
  "commands": [
    {
      "name": "Build Project",
      "options": [
        {
          "type": "list",
          "name": "buildType",
          "message": "Select build configuration:",
          "choices": ["development", "production", "staging"]
        },
        {
          "type": "confirm",
          "name": "minify",
          "message": "Minify the output?",
          "default": false
        }
      ],
      "executeCommands": [
        "npm run build -- --env={{buildType}} {{#if minify}}--minify{{/if}}",
        "echo Build completed for {{buildType}} environment"
      ],
      "executeParallel": false,
      "requireExecutionChoice": true
    },
    {
      "name": "Install & Setup",
      "executeCommands": [
        "npm install",
        "npx husky install",
        "cp .env.example .env"
      ],
      "executeParallel": true,
      "requireExecutionChoice": true
    },
    {
      "name": "Docker Operations",
      "subcommands": [
        {
          "name": "Start Containers",
          "executeCommands": [
            "docker-compose up -d",
            "echo Docker containers started successfully"
          ],
          "executeParallel": false,
          "requireExecutionChoice": true
        },
        {
          "name": "Complex Database Setup",
          "options": [
            {
              "type": "list",
              "name": "dbType",
              "message": "Select database type:",
              "choices": ["mysql", "postgres", "mongodb"]
            },
            {
              "type": "input",
              "name": "dbName",
              "message": "Enter database name:",
              "default": "myapp"
            },
            {
              "type": "password",
              "name": "dbPassword",
              "message": "Enter database password:"
            },
            {
              "type": "number",
              "name": "port",
              "message": "Enter database port:",
              "default": 5432
            },
            {
              "type": "editor",
              "name": "initialData",
              "message": "Enter initial SQL data (optional):"
            }
          ],
          "executeCommands": [
            "docker run -d --name {{dbName}} -p {{port}}:{{port}} -e POSTGRES_PASSWORD={{dbPassword}} {{#if dbType == 'postgres'}}postgres{{else if dbType == 'mysql'}}mysql{{else}}mongo{{/if}}",
            "{{#if initialData}}echo \"{{initialData}}\" > init.sql{{/if}}",
            "{{#if initialData}}docker cp init.sql {{dbName}}:/docker-entrypoint-initdb.d/{{/if}}"
          ],
          "executeParallel": false
        }
      ]
    }
  ]
}