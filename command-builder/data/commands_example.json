{
  "commands": [
    {
      "name": "Build",
      "options": [
        {
          "type": "list",
          "name": "buildType",
          "message": "Select build configuration:",
          "choices": ["Development", "Production", "Staging"]
        },
        {
          "type": "confirm",
          "name": "minify",
          "message": "Minify the output?",
          "default": false
        }
      ],
      "execute": "npm run build -- --env={{buildType}} {{#if minify}}--minify{{/if}}"
    },
    {
      "name": "Deploy",
      "options": [
        {
          "type": "list",
          "name": "environment",
          "message": "Select deployment environment:",
          "choices": ["Development", "Staging", "Production"]
        },
        {
          "type": "input",
          "name": "version",
          "message": "Enter version tag:",
          "default": "1.0.0"
        }
      ],
      "execute": "npm run deploy -- --env={{environment}} --version={{version}}"
    },
    {
      "name": "Test",
      "options": [
        {
          "type": "list",
          "name": "testType",
          "message": "Select test type:",
          "choices": ["Unit", "Integration", "E2E"]
        },
        {
          "type": "confirm",
          "name": "watch",
          "message": "Run in watch mode?",
          "default": false
        }
      ],
      "execute": "npm run test:{{testType}} {{#if watch}}-- --watch{{/if}}"
    },
    {
      "name": "Configure",
      "subcommands": [
        {
          "name": "Environment Variables",
          "execute": "code .env"
        },
        {
          "name": "Project Settings",
          "execute": "code package.json tsconfig.json"
        },
        {
          "name": "Dependencies",
          "options": [
            {
              "type": "list",
              "name": "action",
              "message": "Select action:",
              "choices": ["Install new", "Update existing", "Remove"]
            },
            {
              "type": "input",
              "name": "packageName",
              "message": "Enter package name:",
              "validate": "input => input.trim() !== '' || 'Package name is required'"
            }
          ],
          "execute": {
            "Install new": "npm install {{packageName}}",
            "Update existing": "npm update {{packageName}}",
            "Remove": "npm uninstall {{packageName}}"
          }
        }
      ]
    }
  ]
}